"use strict";
// Copyright Â© Roots Software Foundation LLC
// Licensed under the MIT license.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThemeJSON = exports.boot = exports.name = void 0;
/**
 * Find/replace {@link URL.href} with {@link URL.pathname}
 *
 * @example
 * https://mysite.com `-->` [https://mysite.com/, /]
 * https://mysite.com/  `-->` [https://mysite.com/, /]
 * https://mysite.com/subsite `-->` [https://mysite.com/subsite/, /subsite/]
 */
const makeInterception = (input) => {
    const url = new URL(input);
    url.pathname = url.pathname.endsWith('/')
        ? url.pathname
        : `${url.pathname}/`;
    return [url.href, url.pathname];
};
/**
 * @public
 */
exports.name = '@roots/bud-preset-wordpress';
/**
 * @public
 */
const boot = async (app, logger) => {
    /* Exit early if env is not set */
    if (!app.env.isString('WP_HOME'))
        return;
    /* source env */
    const HOME = app.env.get('WP_HOME');
    logger.info(`WP_HOME envvar found`, HOME);
    /**
     * Set proxy target to `WP_HOME`
     */
    try {
        const url = new URL(HOME);
        app.proxy(url);
    }
    catch (err) {
        logger.warn(`\n`, `Tried to set proxy based on value of WP_HOME but failed\n`, `WP_HOME is set as: ${HOME}`, `\n`, err);
    }
    /**
     * Set interceptor replacements
     */
    app.hooks.action('event.proxy.interceptor', async ({ hooks }) => hooks.on('middleware.proxy.replacements', replacements => [
        ...(replacements ?? []),
        makeInterception(HOME),
    ]));
};
exports.boot = boot;
exports.ThemeJSON = __importStar(require("./theme"));
