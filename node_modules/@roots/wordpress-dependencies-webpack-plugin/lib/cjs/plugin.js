"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WordPressDependenciesWebpackPlugin = void 0;
const helpful_decorators_1 = require("helpful-decorators");
const webpack_1 = __importDefault(require("webpack"));
const wpPkgs = __importStar(require("./packages"));
/**
 * @public
 */
class WordPressDependenciesWebpackPlugin {
    /**
     * @public
     */
    constructor(options) {
        /**
         * @public
         */
        this.plugin = {
            name: 'WordPressDependenciesWebpackPlugin',
            stage: Infinity,
        };
        /**
         * @public
         */
        this.manifest = {};
        /**
         * @public
         */
        this.usedDependencies = {};
        this.fileName = options?.fileName ?? 'wordpress.json';
    }
    /**
     * @public
     */
    apply(compiler) {
        compiler.hooks.normalModuleFactory.tap(this.plugin.name, this.normalModuleFactory);
        compiler.hooks.thisCompilation.tap(this.plugin, compilation => {
            this.compilation = compilation;
            this.compilation.hooks.processAssets.tap(this.plugin, this.processAssets);
        });
    }
    /**
     * @public
     */
    normalModuleFactory(factory) {
        factory.hooks.beforeResolve.tap(this.plugin.name, ({ contextInfo, request }) => {
            const { issuer } = contextInfo;
            if (!issuer)
                return;
            this.usedDependencies = {
                ...this.usedDependencies,
                [issuer]: [
                    ...(this.usedDependencies[issuer] ?? []),
                    request,
                ].filter(wpPkgs.isProvided),
            };
            return;
        });
    }
    /**
     * @public
     */
    processAssets(assets) {
        this.compilation.entrypoints.forEach(entry => {
            this.manifest[entry.name] = [];
            for (const chunk of entry.chunks) {
                this.compilation.chunkGraph
                    .getChunkModules(chunk)
                    .forEach(({ userRequest, _modules }) => {
                    this.usedDependencies[userRequest]
                        ?.map(req => wpPkgs.transform(req).enqueue)
                        .forEach(req => {
                        !this.manifest[entry.name].includes(req) &&
                            this.manifest[entry.name].push(req);
                    });
                    _modules?.forEach(({ userRequest }) => {
                        this.usedDependencies[userRequest]
                            ?.map(req => wpPkgs.transform(req).enqueue)
                            .forEach(req => {
                            !this.manifest[entry.name].includes(req) &&
                                this.manifest[entry.name].push(req);
                        });
                    });
                });
            }
        });
        assets[this.fileName] = new webpack_1.default.sources.RawSource(JSON.stringify(this.manifest), true);
    }
}
__decorate([
    helpful_decorators_1.bind
], WordPressDependenciesWebpackPlugin.prototype, "apply", null);
__decorate([
    helpful_decorators_1.bind
], WordPressDependenciesWebpackPlugin.prototype, "normalModuleFactory", null);
__decorate([
    helpful_decorators_1.bind
], WordPressDependenciesWebpackPlugin.prototype, "processAssets", null);
exports.WordPressDependenciesWebpackPlugin = WordPressDependenciesWebpackPlugin;
